<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SchemaExplorer</name>
    </assembly>
    <members>
        <member name="T:CodeSmith.Core.Collections.NamedObjectBase">
            <summary>
            Provides a base for objects with names to derive from.
            </summary>
        </member>
        <member name="P:CodeSmith.Core.Collections.INamedObject.Name">
            <summary>
            The name of the object.
            </summary>
        </member>
        <member name="M:CodeSmith.Core.Collections.NamedObjectBase.ToString">
            <summary>
            Returns the name of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CodeSmith.Core.Collections.NamedObjectBase.Name">
            <summary>
            The name of the object.
            </summary>
        </member>
        <member name="M:CodeSmith.Core.Collections.INamedObjectCollection`1.Contains(System.String)">
            <summary>
            Determines whether an element is in the collection with the specified name.
            </summary>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>
              <c>true</c> if item is found in the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeSmith.Core.Collections.INamedObjectCollection`1.IndexOf(System.String)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <param name="name">The name of the item to locate in the list.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:CodeSmith.Core.Collections.INamedObjectCollection`1.Item(System.String)">
            <summary>
            Gets the item with the specified name.
            </summary>
            <returns>
            The item with the specified name.
            </returns>
        </member>
        <member name="T:CodeSmith.Core.Collections.NamedObjectCollection`1">
            <summary>
            Implements a strongly typed collection of <see cref="T:CodeSmith.Core.Collections.INamedObject"/> elements.
            </summary>
            <remarks>
            <b>SchemaObjectBaseCollection</b> provides an <see cref="T:CodeSmith.Core.Collections.ObservableList`1"/>
            that is strongly typed for <see cref="T:CodeSmith.Core.Collections.INamedObject"/> elements.
            </remarks>
        </member>
        <member name="P:CodeSmith.Core.Collections.IReadOnlyCollection`1.Item(System.Int32)">
            <summary>
            Gets the item with the specified index.
            </summary>
            <returns>
            The item with the specified index.
            </returns>
        </member>
        <member name="P:CodeSmith.Core.Collections.IReadOnlyCollection`1.Count">
            <summary>
            How many items are in the collection.
            </summary>
        </member>
        <member name="M:CodeSmith.Core.Collections.IReadOnlyNamedObjectCollection`1.Contains(System.String)">
            <summary>
            Determines whether an element is in the collection with the specified name.
            </summary>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>
              <c>true</c> if item is found in the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeSmith.Core.Collections.IReadOnlyNamedObjectCollection`1.IndexOf(System.String)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <param name="name">The name of the item to locate in the list.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:CodeSmith.Core.Collections.IReadOnlyNamedObjectCollection`1.Item(System.String)">
            <summary>
            Gets the item with the specified name.
            </summary>
            <returns>
            The item with the specified name.
            </returns>
        </member>
        <member name="M:CodeSmith.Core.Collections.NamedObjectCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Core.Collections.NamedObjectCollection`1"/> class.
            </summary>
        </member>
        <member name="M:CodeSmith.Core.Collections.NamedObjectCollection`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Core.Collections.NamedObjectCollection`1"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:CodeSmith.Core.Collections.NamedObjectCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Core.Collections.NamedObjectCollection`1"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="M:CodeSmith.Core.Collections.NamedObjectCollection`1.Contains(System.String)">
            <summary>
            Determines whether an element is in the collection with the specified name.
            </summary>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>
              <c>true</c> if item is found in the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeSmith.Core.Collections.NamedObjectCollection`1.IndexOf(System.String)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <param name="name">The name of the item to locate in the list.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:CodeSmith.Core.Collections.NamedObjectCollection`1.Item(System.String)">
            <summary>
            Gets the item with the specified name.
            </summary>
            <returns>
            The item with the specified name.
            </returns>
        </member>
        <member name="M:CodeSmith.Core.Collections.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Core.Collections.NamedObjectCollection`1"/> class.
            </summary>
            <param name="items">The items from which the elements are copied.</param>
        </member>
        <member name="M:CodeSmith.Core.Collections.ReadOnlyNamedObjectCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSmith.Core.Collections.NamedObjectCollection`1"/> class.
            </summary>
            <param name="items">The items from which the elements are copied.</param>
        </member>
        <member name="M:CodeSmith.Core.Collections.ReadOnlyNamedObjectCollection`1.Contains(System.String)">
            <summary>
            Determines whether an element is in the collection with the specified name.
            </summary>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>
              <c>true</c> if item is found in the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeSmith.Core.Collections.ReadOnlyNamedObjectCollection`1.IndexOf(System.String)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <param name="name">The name of the item to locate in the list.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:CodeSmith.Core.Collections.ReadOnlyNamedObjectCollection`1.Item(System.String)">
            <summary>
            Gets the item with the specified name.
            </summary>
            <returns>
            The item with the specified name.
            </returns>
        </member>
        <member name="M:SchemaExplorer.WrappedNamedObjectCollection`2.Contains(System.String)">
            <summary>
            Determines whether an element is in the collection with the specified owner and name.
            </summary>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>
              <c>true</c> if item is found in the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SchemaExplorer.WrappedNamedObjectCollection`2.IndexOf(System.String)">
            <summary>
            Determines the index of an item with the specified owner and name.
            </summary>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:SchemaExplorer.WrappedNamedObjectCollection`2.Item(System.String)">
            <summary>
            Gets the <see cref="!:TBase"/> with the specified owner and name.
            </summary>
            <returns>
            The <see cref="!:TBase"/> with the specified owner and name.
            </returns>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectCollection`1.Refresh">
            <summary>
            Refreshes the schema object.
            </summary>
        </member>
        <member name="M:SchemaExplorer.WrappedSchemaObjectCollection`2.Contains(System.String)">
            <summary>
            Determines whether an element is in the collection with the specified name.
            </summary>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>
              <c>true</c> if item is found in the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SchemaExplorer.WrappedSchemaObjectCollection`2.IndexOf(System.String)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <param name="name">The name of the item to locate in the list.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:SchemaExplorer.WrappedSchemaObjectCollection`2.Item(System.String)">
            <summary>
            Gets the item with the specified name.
            </summary>
            <returns>
            The item with the specified name.
            </returns>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectWithOwnerCollection`1.Contains(System.String,System.String)">
            <summary>
            Determines whether an element is in the collection with the specified owner and name.
            </summary>
            <param name="owner">The owner of the item to locate in the collection.</param>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>
              <c>true</c> if item is found in the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SchemaExplorer.ISchemaObjectWithOwnerCollection`1.IndexOf(System.String,System.String)">
            <summary>
            Determines the index of an item with the specified owner and name.
            </summary>
            <param name="owner">The owner of the item to locate in the collection.</param>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:SchemaExplorer.ISchemaObjectWithOwnerCollection`1.Item(System.String,System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.TableSchema"/> with the specified owner and name.
            </summary>
            <returns>
            The <see cref="T:SchemaExplorer.TableSchema"/> with the specified owner and name.
            </returns>
        </member>
        <member name="M:SchemaExplorer.WrappedSchemaObjectWithOwnerCollection`2.Contains(System.String,System.String)">
            <summary>
            Determines whether an element is in the collection with the specified owner and name.
            </summary>
            <param name="owner">The owner of the item to locate in the collection.</param>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>
              <c>true</c> if item is found in the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SchemaExplorer.WrappedSchemaObjectWithOwnerCollection`2.IndexOf(System.String,System.String)">
            <summary>
            Determines the index of an item with the specified owner and name.
            </summary>
            <param name="owner">The owner of the item to locate in the collection.</param>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:SchemaExplorer.WrappedSchemaObjectWithOwnerCollection`2.Item(System.String,System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.TableSchema"/> with the specified owner and name.
            </summary>
            <returns>
            The <see cref="T:SchemaExplorer.TableSchema"/> with the specified owner and name.
            </returns>
        </member>
        <member name="T:SchemaExplorer.SchemaObjectCollection`1">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.ISchemaObject"/> elements.
            </summary>
            <remarks>
            <b>SchemaObjectBaseCollection</b> provides an <see cref="T:CodeSmith.Core.Collections.ObservableList`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ISchemaObject"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IReadOnlySchemaObjectCollection`1.Refresh">
            <summary>
            Refreshes the schema object.
            </summary>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.SchemaObjectCollection`1"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectCollection`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.SchemaObjectCollection`1"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.SchemaObjectCollection`1"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBaseCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.ISchemaObject})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.SchemaObjectBaseCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="T:SchemaExplorer.SchemaObjectWithOwnerBase">
            <summary>
            Provides a base for all schema objects to derive from.
            </summary>
        </member>
        <member name="T:SchemaExplorer.SchemaObjectBase">
            <summary>
            Provides a base for all schema objects to derive from.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ISchemaObject.Refresh">
            <summary>
            Allows the object to be refreshed.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ISchemaObject.DateCreated">
            <summary>
            Returns the date this table was created.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ISchemaObject.Description">
            <summary>
            The description of the object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ISchemaObject.ExtendedProperties">
            <summary>
            Used to store any additional information about the schema object.
            </summary>		
        </member>
        <member name="P:SchemaExplorer.ISchemaObject.Database">
            <summary>
            Allows access to the DatabaseSchema object that contains this schema object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ISchemaObject.DeepLoad">
            <summary>
            Gets or sets a value indicating this schema object and all its children will be loaded.
            </summary>
            <value><c>true</c> if deep load; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SchemaExplorer.ISchemaObject.IncludeFunctions">
            <summary>
            Gets or sets a value indicating this schema object and all its children will be loaded.
            </summary>
            <value><c>true</c> if functions should be included; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SchemaExplorer.ISchemaObject.FullName">
            <summary>
            Returns the owner and name of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.ISchemaObject.SortName">
            <summary>
            Gets the name used to sort in 'Table (Owner)' format.
            </summary>
            <value>The name used to sort.</value>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBase.Refresh">
            <summary>
            Allows the object to be refreshed.
            </summary>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBase.GetLoadedExtendedProperties">
            <summary>
            Gets the existing ExtendedProperties without causing a lazy load.
            </summary>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBase.FormatFullName(System.String,System.String)">
            <summary>
            Formats the full name.
            </summary>
            <param name="owner">The owner.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBase.GetHashCode">
            <summary>
            Returns a HashCode based on the database and name of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectBase.Equals(System.Object)">
            <summary>
            Determines if another table is the same as this table.
            </summary>
            <param name="obj">The table to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBase.DateCreated">
            <summary>
            Returns the date this table was created.
            </summary>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBase.Description">
            <summary>
            The description of the object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBase.ExtendedProperties">
            <summary>
            Used to store any additional information about the schema object.
            </summary>		
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBase.Database">
            <summary>
            Allows access to the DatabaseSchema object that contains this schema object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBase.DeepLoad">
            <summary>
            Gets or sets a value indicating this schema object and all its children will be loaded.
            </summary>
            <value><c>true</c> if deep load; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBase.IncludeFunctions">
            <summary>
            Gets or sets a value indicating this schema object and all its children will be loaded.
            </summary>
            <value><c>true</c> if functions should be included; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBase.FullName">
            <summary>
            Returns the owner and name of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectBase.SortName">
            <summary>
            Gets the name used to sort in 'Table (Owner)' format.
            </summary>
            <value>The name used to sort.</value>
        </member>
        <member name="P:SchemaExplorer.ISchemaObjectWithOwner.Owner">
            <summary>
            Returns the owner of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectWithOwnerBase.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectWithOwnerBase.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime)">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="dateCreated"></param>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectWithOwnerBase.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,SchemaExplorer.ExtendedProperty[])">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="extendedProperties"></param>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectWithOwnerBase.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime,SchemaExplorer.ExtendedProperty[])">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="dateCreated"></param>
            <param name="extendedProperties"></param>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectWithOwnerBase.ToString">
            <summary>
            Returns the name of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectWithOwnerBase.GetHashCode">
            <summary>
            Returns a HashCode based on the database and name of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectWithOwnerBase.Equals(System.Object)">
            <summary>
            Determines if another table is the same as this table.
            </summary>
            <param name="obj">The table to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectWithOwnerBase.Owner">
            <summary>
            Returns the owner of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectWithOwnerBase.FullName">
            <summary>
            Returns the owner and name of the table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectWithOwnerBase.SortName">
            <summary>
            Gets the name used to sort in 'Table (Owner)' format.
            </summary>
            <value>The name used to sort.</value>
        </member>
        <member name="M:SchemaExplorer.Design.ColumnSchemaPickerUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SchemaExplorer.Design.ColumnSchemaPickerUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SchemaExplorer.Design.CommandSchemaPickerUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SchemaExplorer.Design.CommandSchemaPickerUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SchemaExplorer.Design.CommandSchemaPickerUI.IncludeFunctions">
            <summary>
            Gets or sets a value indicating this schema object and all its children will be loaded.
            </summary>
            <value><c>true</c> if functions should be included; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:SchemaExplorer.Design.DatabaseSchemaPickerUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SchemaExplorer.Design.DatabaseSchemaPickerUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SchemaExplorer.Design.DataSourceManagerUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SchemaExplorer.Design.DataSourceManagerUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SchemaExplorer.Design.DataSourceUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SchemaExplorer.Design.DataSourceUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SchemaExplorer.Design.ErrorDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SchemaExplorer.Design.ExtendedPropertyEditorUI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SchemaExplorer.Design.ExtendedPropertyEditorUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SchemaExplorer.Design.ExtendedPropertyEditorUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SchemaExplorer.Design.TableSchemaPickerUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SchemaExplorer.Design.TableSchemaPickerUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SchemaExplorer.Design.TabularObjectBasePickerUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SchemaExplorer.Design.TabularObjectBasePickerUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SchemaExplorer.Design.ViewColumnSchemaPickerUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SchemaExplorer.Design.ViewColumnSchemaPickerUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SchemaExplorer.Design.ViewSchemaPickerUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SchemaExplorer.Design.ViewSchemaPickerUI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SchemaExplorer.IReadOnlySchemaObjectWithOwnerCollection`1.Contains(System.String,System.String)">
            <summary>
            Determines whether an element is in the collection with the specified owner and name.
            </summary>
            <param name="owner">The owner of the item to locate in the collection.</param>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>
              <c>true</c> if item is found in the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SchemaExplorer.IReadOnlySchemaObjectWithOwnerCollection`1.IndexOf(System.String,System.String)">
            <summary>
            Determines the index of an item with the specified owner and name.
            </summary>
            <param name="owner">The owner of the item to locate in the collection.</param>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:SchemaExplorer.IReadOnlySchemaObjectWithOwnerCollection`1.Item(System.String,System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.TableSchema"/> with the specified owner and name.
            </summary>
            <returns>
            The <see cref="T:SchemaExplorer.TableSchema"/> with the specified owner and name.
            </returns>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectWithOwnerCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableSchemaCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectWithOwnerCollection`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableSchemaCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectWithOwnerCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableSchemaCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectWithOwnerCollection`1.Contains(System.String,System.String)">
            <summary>
            Determines whether an element is in the collection with the specified owner and name.
            </summary>
            <param name="owner">The owner of the item to locate in the collection.</param>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>
              <c>true</c> if item is found in the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SchemaExplorer.SchemaObjectWithOwnerCollection`1.IndexOf(System.String,System.String)">
            <summary>
            Determines the index of an item with the specified owner and name.
            </summary>
            <param name="owner">The owner of the item to locate in the collection.</param>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:SchemaExplorer.SchemaObjectWithOwnerCollection`1.Item(System.String,System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.TableSchema"/> with the specified owner and name.
            </summary>
            <returns>
            The <see cref="T:SchemaExplorer.TableSchema"/> with the specified owner and name.
            </returns>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.SchemaProvider"/> class.
            </summary>
            <param name="assemblyQualifiedName">The assembly-qualified name of the Type, which includes the name of the assembly from which the Type was loaded.</param>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.SchemaProvider"/> class.
            </summary>
            <param name="assemblyQualifiedName">The assembly-qualified name of the Type, which includes the name of the assembly from which the Type was loaded.</param>
            <param name="displayName">The name used in displaying this DataSourceProvider.</param>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.GetProviderType">
            <summary>
            Gets the <see cref="T:System.Type"/> for the provider specified in <see cref="P:SchemaExplorer.SchemaProvider.AssemblyQualifiedName"/>.
            </summary>
            <returns>
            The <see cref="T:System.Type"/> for the provider specified in <see cref="P:SchemaExplorer.SchemaProvider.AssemblyQualifiedName"/>. 
            If the Type can not be resolved, <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.CreateProvider">
            <summary>
            Creates an instance of <see cref="T:SchemaExplorer.IDbSchemaProvider"/> for the type specified in <see cref="P:SchemaExplorer.SchemaProvider.AssemblyQualifiedName"/>.
            </summary>
            <returns>An instance of <see cref="T:SchemaExplorer.IDbSchemaProvider"/>, <c>null</c> if the type can not be resolved.</returns>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.CreateProvider(System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:SchemaExplorer.IDbSchemaProvider"/> for the type specified in <see cref="P:SchemaExplorer.SchemaProvider.AssemblyQualifiedName"/>.
            </summary>
            <param name="cache">if set to <c>true</c>, the an instance will be cached and return on future calls.</param>
            <returns>
            An instance of <see cref="T:SchemaExplorer.IDbSchemaProvider"/>, <c>null</c> if the type can not be resolved.
            </returns>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.CreateEditor">
            <summary>
            Creates an instance of <see cref="T:SchemaExplorer.IDbConnectionStringEditor"/> for the type specified in <see cref="P:SchemaExplorer.SchemaProvider.AssemblyQualifiedName"/>.
            </summary>
            <returns>An instance of <see cref="T:SchemaExplorer.IDbConnectionStringEditor"/>, <c>null</c> if the type can not be resolved.</returns>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.CreateEditor(System.Boolean)">
            <summary>
            Creates an instance of <see cref="T:SchemaExplorer.IDbConnectionStringEditor"/> for the type specified in <see cref="P:SchemaExplorer.SchemaProvider.AssemblyQualifiedName"/>.
            </summary>
            <param name="cache">if set to <c>true</c>, the an instance will be cached and return on future calls.</param>
            <returns>An instance of <see cref="T:SchemaExplorer.IDbConnectionStringEditor"/>, <c>null</c> if the type can not be resolved.</returns>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.op_Implicit(System.String)~SchemaExplorer.SchemaProvider">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:SchemaExplorer.SchemaProvider"/>.
            </summary>
            <param name="assemblyQualifiedName">Name of the assembly qualified.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.op_Implicit(SchemaExplorer.SchemaProvider)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:SchemaExplorer.SchemaProvider"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="schemaProvider">The data source provider.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.System#IComparable#CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. 
            </returns>
            <param name="obj">An object to compare with this instance. 
            </param>
            <exception cref="T:System.ArgumentException">
            <paramref name="obj"/> is not the same type as this instance. 
            </exception>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.CompareTo(System.String)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.CompareTo(SchemaExplorer.SchemaProvider)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.Equals(System.String)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.Equals(SchemaExplorer.SchemaProvider)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:SchemaExplorer.SchemaProvider.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:SchemaExplorer.SchemaProvider.DisplayName">
            <summary>
            Gets the display name.
            </summary>
        </member>
        <member name="P:SchemaExplorer.SchemaProvider.AssemblyQualifiedName">
            <summary>
            Gets the assembly-qualified name of the Type, which includes the name of the assembly from which the Type was loaded.
            </summary>
        </member>
        <member name="T:SchemaExplorer.IDbSchemaProvider">
            <summary>
            This interface is used to implement a custom schema provider for
            SchemaExplorer.  To create your own schema provider simply create a
            new assembly which includes a public class that implements this interface.
            Also, the assembly name must end with SchemaProvider.dll
            (ie. MySampleSchemaProvider.dll).  Once you have done this, just
            put the assembly in the same directory as CodeSmith and that's it.
            </summary>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetDatabaseName(System.String)">
            <summary>
            Gets the name of the database.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <returns>The name of the database</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetExtendedProperties(System.String,SchemaExplorer.SchemaObjectBase)">
            <summary>
            Gets the extended property collection for a given schema object.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="schemaObject">Any type that derives from SchemaObjectBase. (E.G. DatabaseSchema, TableSchema, ColumnSchema, ViewSchema, ViewColumnSchema, IndexSchema, CommandSchema, ParameterSchema, PrimaryKeySchema, TableKeySchema)</param>
            <returns>An array of ExtendedProperties for a specific SchemaObjectBase.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.SetExtendedProperties(System.String,SchemaExplorer.SchemaObjectBase)">
            <summary>
            Sets the extended properties.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="schemaObject">Any type that derives from SchemaObjectBase. (E.G. DatabaseSchema, TableSchema, ColumnSchema, ViewSchema, ViewColumnSchema, IndexSchema, CommandSchema, ParameterSchema, PrimaryKeySchema, TableKeySchema)</param>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetTables(System.String,SchemaExplorer.DatabaseSchema)">
            <summary>
            Gets all of the tables available in the database.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="database">The database schema.</param>
            <returns>An array of tables for a specific database.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetTableColumns(System.String,SchemaExplorer.TableSchema)">
            <summary>
            Gets all columns for a given table.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="table">The table schema.</param>
            <returns>An array of view columns for a specific table.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetViews(System.String,SchemaExplorer.DatabaseSchema)">
            <summary>
            Gets all the views available for a given database.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="database">The database schema.</param>
            <returns>An array of views for a specific database.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetViewColumns(System.String,SchemaExplorer.ViewSchema)">
            <summary>
            Gets the columns for a given view.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="view">The view schema.</param>
            <returns>An array of view columns for a specific view.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetViewText(System.String,SchemaExplorer.ViewSchema)">
            <summary>
            Gets the definition for a given view.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="view">The view schema.</param>
            <returns>The definition of a view.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetTablePrimaryKey(System.String,SchemaExplorer.TableSchema)">
            <summary>
            Gets the primary key for a given table.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="table">The table schema.</param>
            <returns>An the primary key for a specific table.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetTableKeys(System.String,SchemaExplorer.TableSchema)">
            <summary>
            Gets all of the table keys for a given table.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="table">The table schema.</param>
            <returns>An array of keys for a specific table.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetTableIndexes(System.String,SchemaExplorer.TableSchema)">
            <summary>
            Gats all of the indexes for a given table.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="table">The table schema.</param>
            <returns>An array of indexes for a specific table.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetTableData(System.String,SchemaExplorer.TableSchema)">
            <summary>
            Gets the data from the given table.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="table">The table schema.</param>
            <returns>A DataTable containing the data of the specific table.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetViewData(System.String,SchemaExplorer.ViewSchema)">
            <summary>
            Gets the data from a given view.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="view">The view schema.</param>
            <returns>A DataTable containing the data of the specific view.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetCommands(System.String,SchemaExplorer.DatabaseSchema)">
            <summary>
            Gets all commands for the given database.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="database">The database schema.</param>
            <returns>An array of commands.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetCommandParameters(System.String,SchemaExplorer.CommandSchema)">
            <summary>
            Gets the parameters for a given command.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="command">The command schema.</param>
            <returns>An array of parameters.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetCommandText(System.String,SchemaExplorer.CommandSchema)">
            <summary>
            Gets the definition for a given command.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="command">The command schema.</param>
            <returns>The definition of a command.</returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProvider.GetCommandResultSchemas(System.String,SchemaExplorer.CommandSchema)">
            <summary>
            Gets schema information about the results of a given command.
            </summary>
            <param name="connectionString">The connection string used to connect to the target database.</param>
            <param name="command">The command schema.</param>
            <returns>An array of command results.</returns>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProvider.Description">
            <summary>
            Gets the description for the schema provider (E.G. SQL Server Schema Provider)..
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDataObject.DataType">
            <summary>
            The data type of a (column) parameter is specific to the .NET Framework data provider. 
            Specifying the type converts the value of the Parameter to the data provider 
            Type before passing the value to the data source.
            
            seealso: http://msdn.microsoft.com/en-us/library/system.data.dbtype.aspx
            example: DbType.AnsiString
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDataObject.SystemType">
            <summary>
            The System Type that is resolved from <see cref="P:SchemaExplorer.IDataObject.DataType"/>.
            
            example: typeof(System.String)
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDataObject.NativeType">
            <summary>
            This is the native data type from the database.
            
            example: nvarchar
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDataObject.Size">
            <summary>
            The size of the data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDataObject.Precision">
            <summary>
            The precision of the data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDataObject.Scale">
            <summary>
            The scale of the data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDataObject.AllowDBNull">
            <summary>
            Whether or not the data object allows null values.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDataObject.Parent">
            <summary>
            The Parent Schema Object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IColumnSchema.Table">
            <summary>
            The table that contains this column.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IColumnSchema.IsPrimaryKeyMember">
            <summary>
            Whether or not the column is a primary key member.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IColumnSchema.IsForeignKeyMember">
            <summary>
            Whether or not the column is a foreign key member.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IColumnSchema.IsUnique">
            <summary>
            Whether or not this column is unique.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ColumnSchema">
            <summary>
            Provides information about a table column.
            </summary>
        </member>
        <member name="T:SchemaExplorer.DataObjectBase">
            <summary>
            Provides a common base for all schema objects that describe a data field.
            </summary>
        </member>
        <member name="M:SchemaExplorer.DataObjectBase.#ctor(SchemaExplorer.ISchemaObject,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32)">
            <summary>
            Creates a new instance of the ViewColumnSchema object.
            </summary>
            <param name="parent">The object that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
        </member>
        <member name="M:SchemaExplorer.DataObjectBase.#ctor(SchemaExplorer.ISchemaObject,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean)">
            <summary>
            Creates a new instance of the ViewColumnSchema object.
            </summary>
            <param name="parent">The object that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
        </member>
        <member name="M:SchemaExplorer.DataObjectBase.#ctor(SchemaExplorer.ISchemaObject,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,SchemaExplorer.ExtendedProperty[])">
            <summary>
            Creates a new instance of the ViewColumnSchema object.
            </summary>
            <param name="parent">The object that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="extendedProperties">The array of extended properties for this column.</param>
        </member>
        <member name="M:SchemaExplorer.DataObjectBase.#ctor(SchemaExplorer.ISchemaObject,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean,SchemaExplorer.ExtendedProperty[])">
            <summary>
            Creates a new instance of the ViewColumnSchema object.
            </summary>
            <param name="parent">The object that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
            <param name="extendedProperties">The array of extended properties for this column.</param>
        </member>
        <member name="M:SchemaExplorer.DataObjectBase.ToString">
            <summary>
            Returns the name of the column.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.DataObjectBase.Refresh">
            <summary>
            Used to refresh this instance.
            </summary>
        </member>
        <member name="M:SchemaExplorer.DataObjectBase.Equals(System.Object)">
            <summary>
            Determines if another view column is the same as this view column.
            </summary>
            <param name="obj">The view column to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.DataObjectBase.GetHashCode">
            <summary>
            Returns a hashcode based on the database, view and name of the view column.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.DataType">
            <summary>
            The data type of a (column) parameter is specific to the .NET Framework data provider. 
            Specifying the type converts the value of the Parameter to the data provider 
            Type before passing the value to the data source.
            
            see also: http://msdn.microsoft.com/en-us/library/system.data.dbtype.aspx
            example: DbType.AnsiString
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.SystemType">
            <summary>
            The System Type that is resolved from <see cref="P:SchemaExplorer.DataObjectBase.DataType"/>.
            
            example: typeof(System.String)
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.Parent">
            <summary>
            The Parent Schema Object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.NativeType">
            <summary>
            This is the native data type from the database.
            
            example: nvarchar
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.Size">
            <summary>
            The size of the data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.Precision">
            <summary>
            The precision of the data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.Scale">
            <summary>
            The scale of the data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DataObjectBase.AllowDBNull">
            <summary>
            Whether or not the data object allows null values.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ColumnSchema.#ctor(SchemaExplorer.TableSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean)">
            <summary>
            Creates a new instance of the ColumnSchema object.
            </summary>
            <param name="table">The table that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
        </member>
        <member name="M:SchemaExplorer.ColumnSchema.#ctor(SchemaExplorer.TableSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean,SchemaExplorer.ExtendedProperty[])">
            <summary>
            Creates a new instance of the ColumnSchema object.
            </summary>
            <param name="table">The table that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
            <param name="extendedProperties">The array of extended properties for the column.</param>
        </member>
        <member name="P:SchemaExplorer.ColumnSchema.Table">
            <summary>
            The table that contains this column.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ColumnSchema.IsPrimaryKeyMember">
            <summary>
            Whether or not the column is a primary key member.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ColumnSchema.IsForeignKeyMember">
            <summary>
            Whether or not the column is a foreign key member.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ColumnSchema.IsUnique">
            <summary>
            Whether or not this column is unique.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ColumnSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.ColumnSchema"/> elements.
            </summary>
            <remarks>
            <b>ColumnSchemaCollection</b> provides an <see cref="T:SchemaExplorer.DataObjectBaseCollection`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="T:SchemaExplorer.DataObjectBaseCollection`1">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.DataObjectBase"/> elements.
            </summary>
            <remarks>
            <b>DataObjectBaseCollection</b> provides an <see cref="T:SchemaExplorer.SchemaObjectCollection`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.IDataObject"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataObjectBaseCollection`1"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataObjectBaseCollection`1"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataObjectBaseCollection`1"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.ColumnSchemaCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.ColumnSchema})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="T:SchemaExplorer.TabularObjectBase">
            <summary>
            Provides a common base for all tabular schema objects.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ITabularObject.GetData">
            <summary>
            Gets the data contained within the schema object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.ITabularObject.Item(System.Int32)">
            <summary>
            Index to allow easy access to the columns in this schema object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITabularObject.DataObjects">
            <summary>
            Provides information about the schema objects columns.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBase.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBase.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime)">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="dateCreated"></param>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBase.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,SchemaExplorer.ExtendedProperty[])">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="extendedProperties"></param>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBase.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime,SchemaExplorer.ExtendedProperty[])">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="dateCreated"></param>
            <param name="extendedProperties"></param>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBase.GetData">
            <summary>
            Gets the data contained within the table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.TabularObjectBase.Item(System.Int32)">
            <summary>
            Index to allow easy access to the columns in this schema object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TabularObjectBase.DataObjects">
            <summary>
            Provides information about the schema objects columns.
            </summary>
        </member>
        <member name="T:SchemaExplorer.TabularObjectBaseCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.SchemaObjectWithOwnerCollection`1"/> elements.
            </summary>
            <remarks>
            <b>TabularObjectBaseCollection</b> provides an <see cref="T:SchemaExplorer.SchemaObjectWithOwnerCollection`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ITabularObject"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.TabularObjectBaseCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.ITabularObject})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TabularObjectBaseCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="P:SchemaExplorer.ICommandResultColumnSchema.Command">
            <summary>
            The command that contains this column.
            </summary>
        </member>
        <member name="T:SchemaExplorer.CommandResultColumnSchema">
            <summary>
            Provides information about a command result column.
            </summary>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchema.#ctor(SchemaExplorer.CommandSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean)">
            <summary>
            Creates a new instance of the CommandResultColumnSchema object.
            </summary>
            <param name="command">The command that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchema.#ctor(SchemaExplorer.CommandSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean,SchemaExplorer.ExtendedProperty[])">
            <summary>
            Creates a new instance of the CommandResultColumnSchema object.
            </summary>
            <param name="command">The command that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
            <param name="extendedProperties">The array of extended properties for the column.</param>
        </member>
        <member name="P:SchemaExplorer.CommandResultColumnSchema.Command">
            <summary>
            The command that contains this column.
            </summary>
        </member>
        <member name="T:SchemaExplorer.CommandResultColumnSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements.
            </summary>
            <remarks>
            <b>CommandResultColumnSchemaCollection</b> provides an <see cref="T:SchemaExplorer.DataObjectBaseCollection`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandResultColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.CommandResultColumnSchemaCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.CommandResultColumnSchema})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ColumnSchemaCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="P:SchemaExplorer.ICommandResultSchema.Command">
            <summary>
            Provides access to the command that this command result schema belongs to.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ICommandResultSchema.Columns">
            <summary>
            Provides information about the command result columns.
            </summary>
        </member>
        <member name="T:SchemaExplorer.CommandResultSchema">
            <summary>
            Summary description for CommandResultSchema.
            </summary>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchema.#ctor(SchemaExplorer.CommandSchema,System.String,System.Collections.Generic.IEnumerable{SchemaExplorer.CommandResultColumnSchema})">
            <summary>
            
            </summary>
            <param name="command">The command that the command result schema belongs to.</param>
            <param name="name">The name of this command result schema.</param>
            <param name="columns">The columns that make up this command result schema.</param>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchema.#ctor(SchemaExplorer.CommandSchema,System.String,System.Collections.Generic.IEnumerable{SchemaExplorer.CommandResultColumnSchema},SchemaExplorer.ExtendedProperty[])">
            <summary>
            
            </summary>
            <param name="command">The command that the command result schema belongs to.</param>
            <param name="name">The name of this command result schema.</param>
            <param name="columns">The columns that make up this command result schema.</param>
            <param name="extendedProperties">The array of extended properties for the column.</param>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchema.Refresh">
            <summary>
            Used to refresh this instance.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchema.Command">
            <summary>
            Provides access to the command that this command result schema belongs to.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandResultSchema.Columns">
            <summary>
            Provides information about the command result columns.
            </summary>
        </member>
        <member name="T:SchemaExplorer.CommandResultSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.CommandResultSchema"/> elements.
            </summary>
            <remarks>
            <b>CommandResultSchemaCollection</b> provides an <see cref="!:TabularObjectBaseCollection&lt;T&gt;"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandResultSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.CommandResultSchemaCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.CommandResultSchema})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandResultSchemaCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="P:SchemaExplorer.ICommandSchema.Parameters">
            <summary>
            Parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ICommandSchema.CommandResults">
            <summary>
            Provides access to information about the results and column schema information returned when executing this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ICommandSchema.InputParameters">
            <summary>
            Input parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ICommandSchema.OutputParameters">
            <summary>
            Output parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ICommandSchema.InputOutputParameters">
            <summary>
            InputOutput parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ICommandSchema.AllInputParameters">
            <summary>
            Input and InputOutput parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ICommandSchema.AllOutputParameters">
            <summary>
            Output and InputOutput parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ICommandSchema.NonReturnValueParameters">
            <summary>
            All parameters except the return value parameter.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ICommandSchema.ReturnValueParameter">
            <summary>
            The return value parameter for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ICommandSchema.CommandText">
            <summary>
            Gets the command text for this command.
            </summary>
        </member>
        <member name="T:SchemaExplorer.CommandSchema">
            <summary>
            Provides information about a command.
            </summary>
        </member>
        <member name="M:SchemaExplorer.CommandSchema.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime)">
            <summary>
            Creates a new instance of the CommandSchema object.
            </summary>
            <param name="database">The database that the command belongs to.</param>
            <param name="name">The name of the command.</param>
            <param name="owner">The owner of the command.</param>
            <param name="dateCreated">The date this command was created.</param>
        </member>
        <member name="M:SchemaExplorer.CommandSchema.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime,SchemaExplorer.ExtendedProperty[])">
            <summary>
            Creates a new instance of the CommandSchema object.
            </summary>
            <param name="database">The database that the command belongs to.</param>
            <param name="name">The name of the command.</param>
            <param name="owner">The owner of the command.</param>
            <param name="dateCreated">The date this command was created.</param>
            <param name="extendedProperties">The array of extended properties for the command.</param>
        </member>
        <member name="M:SchemaExplorer.CommandSchema.Refresh">
            <summary>
            Refresh this instance.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.Parameters">
            <summary>
            Parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.CommandResults">
            <summary>
            Provides access to information about the results and column schema information returned when executing this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.InputParameters">
            <summary>
            Input parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.OutputParameters">
            <summary>
            Output parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.InputOutputParameters">
            <summary>
            InputOutput parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.AllInputParameters">
            <summary>
            Input and InputOutput parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.AllOutputParameters">
            <summary>
            Output and InputOutput parameters for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.NonReturnValueParameters">
            <summary>
            All parameters except the return value parameter.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.ReturnValueParameter">
            <summary>
            The return value parameter for this command.
            </summary>
        </member>
        <member name="P:SchemaExplorer.CommandSchema.CommandText">
            <summary>
            Gets the command text for this command.
            </summary>
        </member>
        <member name="T:SchemaExplorer.CommandSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.CommandSchema"/> elements.
            </summary>
            <remarks>
            <b>CommandSchemaCollection</b> provides an <see cref="T:SchemaExplorer.SchemaObjectWithOwnerCollection`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.CommandSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.CommandSchemaCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.CommandSchema})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.CommandSchemaCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="M:SchemaExplorer.Configuration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.Configuration"/> class.
            </summary>
        </member>
        <member name="P:SchemaExplorer.Configuration.Instance">
            <summary>
            Gets the current singleton instance of Configuration.
            </summary>
            <value>The current singleton instance.</value>
            <remarks>
            An instance of Configuration wont be created until the very first 
            call to the sealed class. This is a CLR optimization that
            provides a properly lazy-loading singleton. 
            </remarks>
        </member>
        <member name="T:SchemaExplorer.Configuration.Nested">
            <summary>
            Nested class to lazy-load singleton.
            </summary>
        </member>
        <member name="M:SchemaExplorer.Configuration.Nested.#cctor">
            <summary>
            Initializes the Nested class.
            </summary>
            <remarks>
            Explicit static constructor to tell C# compiler not to mark type as beforefieldinit.
            </remarks>
        </member>
        <member name="F:SchemaExplorer.Configuration.Nested.Current">
            <summary>
            Current singleton instance.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ConfigurationImport">
            <summary>
            A class used to import old schema explorer configuration files.
            </summary>
        </member>
        <member name="F:Microsoft.Data.ConnectionUI.AccessConnectionUIControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.AccessConnectionUIControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.AccessConnectionUIControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Microsoft.Data.ConnectionUI.AddPropertyDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.AddPropertyDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.AddPropertyDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Microsoft.Data.ConnectionUI.DataConnectionAdvancedDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.DataConnectionAdvancedDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.DataConnectionAdvancedDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Microsoft.Data.ConnectionUI.DataConnectionDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.DataConnectionDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.DataConnectionDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Microsoft.Data.ConnectionUI.DataConnectionSourceDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.DataConnectionSourceDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.DataConnectionSourceDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.HelpUtils.IsWow64">
            <summary>
            This function checks if the OS is 64 bits.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.HelpUtils.GetValueNamesWow64(System.String,System.Int32)">
            <summary>
            Get ValueNames from registry for WoW64 machine. Corresponding to Microsoft.Win32.RegistryKey.GetValueNames().  
            </summary>
            <param name="registryKey">Registry key string value</param>
            <param name="ulOptions">Access key value options</param>
            <returns></returns>
        </member>
        <member name="F:Microsoft.Data.ConnectionUI.OdbcConnectionUIControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.OdbcConnectionUIControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.OdbcConnectionUIControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.OleDBConnectionProperties.GetRegisteredProviders">
            <summary>
            Gets the registered OLE DB providers as an array of ProgIDs.
            </summary>
        </member>
        <member name="F:Microsoft.Data.ConnectionUI.OleDBConnectionUIControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.OleDBConnectionUIControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.OleDBConnectionUIControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Microsoft.Data.ConnectionUI.OracleConnectionUIControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.OracleConnectionUIControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.OracleConnectionUIControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Microsoft.Data.ConnectionUI.SqlConnectionUIControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.SqlConnectionUIControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.SqlConnectionUIControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Microsoft.Data.ConnectionUI.SqlFileConnectionUIControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.SqlFileConnectionUIControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Microsoft.Data.ConnectionUI.SqlFileConnectionUIControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Microsoft.Data.ConnectionUI.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.AccessConnectionUIControl_BrowseFileDefaultExt">
            <summary>
              Looks up a localized string similar to mdb.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.AccessConnectionUIControl_BrowseFileFilter">
            <summary>
              Looks up a localized string similar to Microsoft Access Databases (*.mdb;*.accdb)|*.mdb;*.accdb|All Files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.AccessConnectionUIControl_BrowseFileTitle">
            <summary>
              Looks up a localized string similar to Select Microsoft Access Database File.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.AccessConnectionUIControl_InvalidConnectionProperties">
            <summary>
              Looks up a localized string similar to The connection properties object must be of type OleDBAccessConnectionProperties..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.AdoDotNetConnectionProperties_NoProperties">
            <summary>
              Looks up a localized string similar to No connection properties have been set..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionAdvancedDialog_Add">
            <summary>
              Looks up a localized string similar to &amp;Add....
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionAdvancedDialog_Description">
            <summary>
              Looks up a localized string similar to &amp;Description.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionAdvancedDialog_Remove">
            <summary>
              Looks up a localized string similar to Remo&amp;ve.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionAdvancedDialog_Reset">
            <summary>
              Looks up a localized string similar to &amp;Reset.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_CannotChangeSingleDataProvider">
            <summary>
              Looks up a localized string similar to The selected data provider cannot be changed when there is only one data provider available..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_CannotChangeSingleDataSource">
            <summary>
              Looks up a localized string similar to The selected data source cannot be changed when there is only one data source available..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_CannotModifyState">
            <summary>
              Looks up a localized string similar to The data connection dialog state cannot be programmatically modified when the dialog is visible..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_ChangeDataSourceTitle">
            <summary>
              Looks up a localized string similar to Change Data Source.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_DataSourceNoAssociation">
            <summary>
              Looks up a localized string similar to The selected data source has no association with this data provider..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_DataSourceNotFound">
            <summary>
              Looks up a localized string similar to The data source was not found..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_DataSourceWithShortProvider">
            <summary>
              Looks up a localized string similar to {0} ({1}).
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_NoDataProviderSelected">
            <summary>
              Looks up a localized string similar to No data provider is currently selected..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_NoDataProvidersForDataSource">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; data source has no association with any data providers..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_NoDataSourcesAvailable">
            <summary>
              Looks up a localized string similar to No data sources are available..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_NoDataSourceSelected">
            <summary>
              Looks up a localized string similar to No data source is currently selected..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_NoHelpAvailable">
            <summary>
              Looks up a localized string similar to No help is available in this context..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_ShowDialogNotSupported">
            <summary>
              Looks up a localized string similar to You cannot use the Form.ShowDialog() method to show the data connection dialog.  Use DataConnectionDialog.Show() instead..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_TestConnectionSucceeded">
            <summary>
              Looks up a localized string similar to Test connection succeeded..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataConnectionDialog_TestResults">
            <summary>
              Looks up a localized string similar to Test results.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_Odbc">
            <summary>
              Looks up a localized string similar to .NET Framework Data Provider for ODBC.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_Odbc_DataSource_Description">
            <summary>
              Looks up a localized string similar to Use this selection to specify an ODBC user or system data source name to connect to an ODBC driver through the .NET Framework Data Provider for ODBC..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_Odbc_Description">
            <summary>
              Looks up a localized string similar to Use this data provider to connect to ODBC data sources..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_Odbc_Short">
            <summary>
              Looks up a localized string similar to ODBC.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_OleDB">
            <summary>
              Looks up a localized string similar to .NET Framework Data Provider for OLE DB.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_OleDB_AccessDataSource_Description">
            <summary>
              Looks up a localized string similar to Use this selection to connect to a Microsoft Access database file through the .NET Framework Data Provider for OLE DB..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_OleDB_Description">
            <summary>
              Looks up a localized string similar to Use this data provider to connect to OLE DB data sources..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_OleDB_OracleDataSource_Description">
            <summary>
              Looks up a localized string similar to Use this selection to connect to Oracle 7.3, 8i, 9i or 10g using the native MSDAORA provider through the .NET Framework Data Provider for OLE DB..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_OleDB_Short">
            <summary>
              Looks up a localized string similar to OLE DB.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_OleDB_SqlDataSource_Description">
            <summary>
              Looks up a localized string similar to Use this selection to connect to Microsoft SQL Server 2000 or above using the .NET framework data provider for OLEDB..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_Oracle">
            <summary>
              Looks up a localized string similar to .NET Framework Data Provider for Oracle.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_Oracle_DataSource_Description">
             <summary>
               Looks up a localized string similar to Use this selection to connect to Oracle 7.3, 8i, 9i or 10g using the .NET Framework Data Provider for Oracle.
            
            Using the .NET Framework Data Provider for Oracle is not recommended because it is being deprecated..
             </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_Oracle_Description">
             <summary>
               Looks up a localized string similar to Use this data provider to connect to Oracle 7.3, 8i, 9i or 10g.
            
            Using the .NET Framework Data Provider for Oracle is not recommended because it is being deprecated..
             </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_Oracle_Short">
            <summary>
              Looks up a localized string similar to OracleClient.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_Sql">
            <summary>
              Looks up a localized string similar to .NET Framework Data Provider for SQL Server.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_Sql_DataSource_Description">
            <summary>
              Looks up a localized string similar to Use this selection to connect to Microsoft SQL Server 2005 or above using the .NET Framework Data Provider for SQL Server..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_Sql_Description">
            <summary>
              Looks up a localized string similar to Use this data provider to connect to Microsoft SQL Server 2005 or above..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_Sql_FileDataSource_Description">
            <summary>
              Looks up a localized string similar to Use this selection to attach a database file to a local Microsoft SQL Server instance (including Microsoft SQL Express) using the .NET Framework Data Provider for SQL Server..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataProvider_Sql_Short">
            <summary>
              Looks up a localized string similar to SqlClient.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataSource_CannotChangeSingleDataProvider">
            <summary>
              Looks up a localized string similar to The default data provider cannot be changed when there is only one data provider available..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataSource_DataProviderNotFound">
            <summary>
              Looks up a localized string similar to The data provider was not found..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataSource_MicrosoftAccess">
            <summary>
              Looks up a localized string similar to Microsoft Access Database File.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataSource_MicrosoftOdbcDsn">
            <summary>
              Looks up a localized string similar to Microsoft ODBC Data Source.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataSource_MicrosoftSqlServer">
            <summary>
              Looks up a localized string similar to Microsoft SQL Server.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataSource_MicrosoftSqlServerFile">
            <summary>
              Looks up a localized string similar to Microsoft SQL Server Database File.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataSource_Oracle">
            <summary>
              Looks up a localized string similar to Oracle Database.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.DataSource_UnspecifiedDisplayName">
            <summary>
              Looks up a localized string similar to &lt;other&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.OdbcConnectionUIControl_InvalidConnectionProperties">
            <summary>
              Looks up a localized string similar to The connection properties object must be of type OdbcConnectionProperties..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.OdbcConnectionUIControl_SQLAllocConnectFailed">
            <summary>
              Looks up a localized string similar to Failed to allocate ODBC connection handle..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.OdbcConnectionUIControl_SQLAllocEnvFailed">
            <summary>
              Looks up a localized string similar to Failed to allocate ODBC environment handle..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.OdbcConnectionUIControl_SQLDriverConnectFailed">
            <summary>
              Looks up a localized string similar to Failed to call the ODBC driver connection utility..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.OleDBAccessConnectionProperties_MustSpecifyDataSource">
            <summary>
              Looks up a localized string similar to This connection cannot be tested because no database file has been specified..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.OleDBConnectionUIControl_InvalidConnectionProperties">
            <summary>
              Looks up a localized string similar to The connection properties object must be of type OleDBConnectionProperties..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.OracleConnectionUIControl_InvalidConnectionProperties">
            <summary>
              Looks up a localized string similar to The connection properties object must be of type OracleConnectionProperties or OleDBOracleConnectionProperties..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.SqlConnectionProperties_CannotTestNonExistentDatabase">
            <summary>
              Looks up a localized string similar to This connection cannot be tested because the specified database does not exist or is not visible to the specified user..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.SqlConnectionProperties_MustSpecifyDataSource">
            <summary>
              Looks up a localized string similar to This connection cannot be tested because no server name has been specified..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.SqlConnectionProperties_UnsupportedSqlVersion">
            <summary>
              Looks up a localized string similar to This server version is not supported.  You must have Microsoft SQL Server 2005 or later..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.SqlConnectionUIControl_BrowseFileDefaultExt">
            <summary>
              Looks up a localized string similar to mdf.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.SqlConnectionUIControl_BrowseFileFilter">
            <summary>
              Looks up a localized string similar to Microsoft SQL Server Databases (*.mdf)|*.mdf|All Files (*.*)|*.*.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.SqlConnectionUIControl_BrowseFileTitle">
            <summary>
              Looks up a localized string similar to Select SQL Server Database File.
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.SqlConnectionUIControl_InvalidConnectionProperties">
            <summary>
              Looks up a localized string similar to The connection properties object must be of type SqlConnectionProperties or OleDBSqlConnectionProperties..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.SqlFileConnectionProperties_CannotTestNonExistentMdf">
            <summary>
              Looks up a localized string similar to This connection cannot be tested because the specified database file does not exist..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.SqlFileConnectionProperties_NoFileSpecified">
            <summary>
              Looks up a localized string similar to No database file was specified..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.SqlFileConnectionProperties_TimeoutReasons">
            <summary>
              Looks up a localized string similar to Common reasons for this problem include that the server is not installed, the service is not started or the server is upgrading your database.  If an upgrade is in process, you will be able to connect to the database when the upgrade is complete..
            </summary>
        </member>
        <member name="P:Microsoft.Data.ConnectionUI.Strings.SqlFileConnectionUIControl_InvalidConnectionProperties">
            <summary>
              Looks up a localized string similar to The connection properties object must be of type SqlFileConnectionProperties..
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDatabaseSchema.Provider">
            <summary>
            Gets or sets the current provider for this instance.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDatabaseSchema.ConnectionString">
            <summary>
            Gets or sets the current connection string for this instance.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDatabaseSchema.Tables">
            <summary>
            Provides access to the tables contained in the database.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDatabaseSchema.Views">
            <summary>
            Provides access to the views contained in the database.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IDatabaseSchema.Commands">
            <summary>
            Provides access to the commands contained in the database.
            </summary>
        </member>
        <member name="T:SchemaExplorer.DatabaseSchema">
            <summary>
            This class allows programmatic discovery of a database schema.
            </summary>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.#ctor(SchemaExplorer.IDbSchemaProvider,System.String)">
            <summary>
            This constructor allows you to specify your own schema provider and set the connection string.
            </summary>
            <param name="provider">The provider to use for this instance.</param>
            <param name="connectionString">The connection string to use for this instance.</param>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.GetProviders">
            <summary>
            Returns a collection of available providers.
            </summary>
            <returns>IDbSchemaProviderCollection</returns>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.ToString">
            <summary>
            Returns the name of the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.GetProvider(System.String)">
            <summary>
            Gets a provider by name.
            </summary>
            <param name="name">The name of the provider.</param>
            <returns>IDbSchemaProvider</returns>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.Refresh">
            <summary>
            Allows for programmatic refreshing of the database schema.
            </summary>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.Equals(System.Object)">
            <summary>
            Determines if another database is the same as this database.
            </summary>
            <param name="obj">The database to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.DatabaseSchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.Provider">
            <summary>
            Gets or sets the current provider for this instance.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.CachedProvider">
            <summary>
            Gets or sets the current cached provider for this instance.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.ConnectionString">
            <summary>
            Gets or sets the current connection string for this instance.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.Name">
            <summary>
            The name of the database.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.Tables">
            <summary>
            Provides access to the tables contained in the database.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.Views">
            <summary>
            Provides access to the views contained in the database.
            </summary>
        </member>
        <member name="P:SchemaExplorer.DatabaseSchema.Commands">
            <summary>
            Provides access to the commands contained in the database.
            </summary>
        </member>
        <member name="T:SchemaExplorer.DataObjectBaseCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.DataObjectBase"/> elements.
            </summary>
            <remarks>
            <b>DataObjectBaseCollection</b> provides an <see cref="T:SchemaExplorer.SchemaObjectCollection`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.DataObjectBase"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.DataObjectBaseCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.DataObjectBase})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataObjectBaseCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="T:SchemaExplorer.DataSource">
            <summary>
            Used to store information about a data source.
            </summary>
        </member>
        <member name="T:SchemaExplorer.DataSourceCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.DataSource"/> elements.
            </summary>
            <remarks>
            <b>DataSourceCollection</b> provides an <see cref="T:CodeSmith.Core.Collections.ObservableList`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.DataSource"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataSourceCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataSourceCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.DataSource})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.DataSourceCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.Contains(System.String)">
            <summary>
            Determines whether an element is in the collection with the specified name.
            </summary>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>
              <c>true</c> if item is found in the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SchemaExplorer.DataSourceCollection.IndexOf(System.String)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <param name="name">The name of the item to locate in the list.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:SchemaExplorer.DataSourceCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.DataSource"/> with the specified name.
            </summary>
            <returns>
            The <see cref="T:SchemaExplorer.DataSource"/> with the specified name.
            </returns>
        </member>
        <member name="P:SchemaExplorer.IExtendedProperty.Value">
            <summary>
            The value of this extended property.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IExtendedProperty.DataType">
            <summary>
            The data type of this extended property.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ExtendedProperty.Name">
            <summary>
            The name of this extended property.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ExtendedProperty.Value">
            <summary>
            The value of this extended property.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ExtendedProperty.DataType">
            <summary>
            The data type of this extended property.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ExtendedPropertyCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.ExtendedProperty"/> elements.
            </summary>
            <remarks>
            <b>ExtendedPropertyCollection</b> provides an <see cref="T:CodeSmith.Core.Collections.ObservableList`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ExtendedProperty"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.ExtendedPropertyCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.ExtendedProperty})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ExtendedPropertyCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="T:SchemaExplorer.IDbSchemaProviderCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements.
            </summary>
            <remarks>
            <b>IDbSchemaProviderCollection</b> provides an <see cref="T:CodeSmith.Core.Collections.ObservableList`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.IDbSchemaProvider"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.IDbSchemaProvider})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IDbSchemaProviderCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.Contains(System.String)">
            <summary>
            Determines whether an element is in the collection with the specified name.
            </summary>
            <param name="name">The name of the item to locate in the collection.</param>
            <returns>
              <c>true</c> if item is found in the collection; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SchemaExplorer.IDbSchemaProviderCollection.IndexOf(System.String)">
            <summary>
            Determines the index of a specific item in the list.
            </summary>
            <param name="name">The name of the item to locate in the list.</param>
            <returns>The index of item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:SchemaExplorer.IDbSchemaProviderCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:SchemaExplorer.IDbSchemaProvider"/> with the specified name.
            </summary>
            <returns>
            The <see cref="T:SchemaExplorer.IDbSchemaProvider"/> with the specified name.
            </returns>
        </member>
        <member name="P:SchemaExplorer.IIndexSchema.Table">
            <summary>
            The table that contains this index.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IIndexSchema.IsPrimaryKey">
            <summary>
            Whether this is the index for the primary key or not.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IIndexSchema.IsUnique">
            <summary>
            Whether this is a unique index.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IIndexSchema.IsClustered">
            <summary>
            Whether this is a clustered index.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IIndexSchema.MemberColumns">
            <summary>
            The columns that make up this index.
            </summary>
        </member>
        <member name="T:SchemaExplorer.IndexSchema">
            <summary>
            Provides information about an index.
            </summary>
        </member>
        <member name="M:SchemaExplorer.IndexSchema.FormatFullName(System.String,System.String,System.String)">
            <summary>
            Formats the full name.
            </summary>
            <param name="owner">The owner.</param>
            <param name="tableName">Name of the table.</param>
            <param name="indexName">Name of the index.</param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.IndexSchema.Equals(System.Object)">
            <summary>
            Determines if another index is the same as this index.
            </summary>
            <param name="obj">The index to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.IndexSchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database, table and name of the index.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.IndexSchema.Table">
            <summary>
            The table that contains this index.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IndexSchema.IsPrimaryKey">
            <summary>
            Whether this is the index for the primary key or not.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IndexSchema.IsUnique">
            <summary>
            Whether this is a unique index.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IndexSchema.IsClustered">
            <summary>
            Whether this is a clustered index.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IndexSchema.MemberColumns">
            <summary>
            The columns that make up this index.
            </summary>
        </member>
        <member name="T:SchemaExplorer.IndexSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.IndexSchema"/> elements.
            </summary>
            <remarks>
            <b>IndexSchemaCollection</b> provides an <see cref="T:SchemaExplorer.SchemaObjectCollection`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.IndexSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.IndexSchemaCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.IndexSchema})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.IndexSchemaCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="P:SchemaExplorer.IMemberColumnSchema.Column">
            <summary>
            The column that this member column object wraps.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IMemberColumnSchema.ColumnExtendedProperties">
            <summary>
            The underlying column's extended properties.
            </summary>
        </member>
        <member name="T:SchemaExplorer.MemberColumnSchema">
            <summary>
            Wraps a ColumnSchema object and allows for storing extended properties specific to this instance of the member column.
            </summary>
        </member>
        <member name="M:SchemaExplorer.MemberColumnSchema.#ctor(SchemaExplorer.ColumnSchema)">
            <summary>
            Creates a new instance of the MemberColumnSchema object.
            </summary>
            <param name="memberColumn">The column that is member column refers to.</param>
        </member>
        <member name="M:SchemaExplorer.MemberColumnSchema.#ctor(SchemaExplorer.ColumnSchema,SchemaExplorer.ExtendedProperty[])">
            <summary>
            Creates a new instance of the MemberColumnSchema object.
            </summary>
            <param name="memberColumn">The column that is member column refers to.</param>
            <param name="extendedProperties">The array of extended properties for the member column.</param>
        </member>
        <member name="M:SchemaExplorer.MemberColumnSchema.Refresh">
            <summary>
            Used to refresh this instance.
            </summary>
        </member>
        <member name="M:SchemaExplorer.MemberColumnSchema.Equals(System.Object)">
            <summary>
            Determines if another column is the same as this column.
            </summary>
            <param name="obj">The column to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.MemberColumnSchema.GetHashCode">
            <summary>
            Returns a HashCode based on the database, table and name of the column.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.Column">
            <summary>
            The column that this member column object wraps.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.ColumnExtendedProperties">
            <summary>
            The underlying column's extended properties.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.ExtendedProperties">
            <summary>
            Used to store any additional information about the schema object.
            </summary>		
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.Table">
            <summary>
            The table that contains this column.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.Parent">
            <summary>
            The Parent Schema Object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.IsPrimaryKeyMember">
            <summary>
            Whether or not the column is a primary key member.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.IsForeignKeyMember">
            <summary>
            Whether or not the column is a foreign key member.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.IsUnique">
            <summary>
            Whether or not this column is unique.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.DataType">
            <summary>
            The data type for this data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.SystemType">
            <summary>
            The system type that for this data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.NativeType">
            <summary>
            The native data type for this data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.Size">
            <summary>
            The size of the data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.Precision">
            <summary>
            The precision of the data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.Scale">
            <summary>
            The scale of the data object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.AllowDBNull">
            <summary>
            Whether or not the data object allows null values.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.Name">
            <summary>
            The name of the object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.Description">
            <summary>
            The description of the object.
            </summary>
        </member>
        <member name="P:SchemaExplorer.MemberColumnSchema.Database">
            <summary>
            Allows access to the DatabaseSchema object that contains this schema object.
            </summary>
        </member>
        <member name="T:SchemaExplorer.MemberColumnSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.MemberColumnSchema"/> elements.
            </summary>
            <remarks>
            <b>MemberColumnSchemaCollection</b> provides an <see cref="T:SchemaExplorer.SchemaObjectCollection`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.MemberColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.MemberColumnSchemaCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.MemberColumnSchemaCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.MemberColumnSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.MemberColumnSchemaCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.MemberColumnSchemaCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.MemberColumnSchema})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.MemberColumnSchemaCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="M:SchemaExplorer.MemberColumnSchemaCollection.Contains(SchemaExplorer.ColumnSchema)">
            <summary>
            Determines whether the <see cref="T:SchemaExplorer.MemberColumnSchemaCollection"/>
            contains a <see cref="T:SchemaExplorer.MemberColumnSchema"/> element that points to the specified <see cref="T:SchemaExplorer.ColumnSchema"/> .
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.MemberColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns><c>true</c> if <paramref name="value"/> is found in the
            <see cref="T:SchemaExplorer.MemberColumnSchemaCollection"/>; otherwise, <c>false</c>.</returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.Contains(System.Object)"/> for details.</remarks>
        </member>
        <member name="M:SchemaExplorer.MemberColumnSchemaCollection.IndexOf(SchemaExplorer.ColumnSchema)">
            <summary>
            Returns the zero-based index of the first occurrence of the specified
            <see cref="T:SchemaExplorer.MemberColumnSchema"/> in the <see cref="T:SchemaExplorer.MemberColumnSchemaCollection"/> that points to the specified <see cref="T:SchemaExplorer.ColumnSchema"/> ..
            </summary>
            <param name="value">The <see cref="T:SchemaExplorer.ColumnSchema"/> object
            to locate in the <see cref="T:SchemaExplorer.MemberColumnSchemaCollection"/>.
            This argument can be a null reference.
            </param>
            <returns>
            The zero-based index of the first occurrence of <paramref name="value"/>
            in the <see cref="T:SchemaExplorer.MemberColumnSchemaCollection"/>, if found; otherwise, -1.
            </returns>
            <remarks>Please refer to <see cref="M:System.Collections.ArrayList.IndexOf(System.Object)"/> for details.</remarks>
        </member>
        <member name="P:SchemaExplorer.IParameterSchema.Command">
            <summary>
            The command that contains this parameter.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IParameterSchema.Direction">
            <summary>
            The parameter direction.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ParameterSchema">
            <summary>
            Provides information about a parameter.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ParameterSchema.Command">
            <summary>
            The command that contains this parameter.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ParameterSchema.Direction">
            <summary>
            The parameter direction.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ParameterSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.ParameterSchema"/> elements.
            </summary>
            <remarks>
            <b>ParameterSchemaCollection</b> provides an <see cref="T:SchemaExplorer.SchemaObjectCollection`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ParameterSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.ParameterSchemaCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.ParameterSchema})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ParameterSchemaCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="P:SchemaExplorer.IPrimaryKeySchema.Table">
            <summary>
            The table that contains this primary key.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IPrimaryKeySchema.MemberColumns">
            <summary>
            The primary key's member columns.
            </summary>
        </member>
        <member name="T:SchemaExplorer.PrimaryKeySchema">
            <summary>
            Provides information about a table primary key.
            </summary>
        </member>
        <member name="M:SchemaExplorer.PrimaryKeySchema.Equals(System.Object)">
            <summary>
            Determines if another primary key is the same as this primary key.
            </summary>
            <param name="obj">The primary key to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.PrimaryKeySchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database, table and name of the primary key.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.PrimaryKeySchema.Table">
            <summary>
            The table that contains this primary key.
            </summary>
        </member>
        <member name="P:SchemaExplorer.PrimaryKeySchema.MemberColumns">
            <summary>
            The primary key's member columns.
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsCLR">
            <summary>
            CLR Procedure or Function.
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsInlineTableValuedFunction">
            <summary>
            Inline-Table-Valued Function.
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsMultiStatementTableValuedFunction">
            <summary>
            Multi-Statement-Table-Valued Function
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsScalarFunction">
            <summary>
            Function.
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsTableValuedFunction">
            <summary>
            Table-Valued Function
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsUserDefinedTableType">
            <summary>
            User Defined Table Type.
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.DatabaseMajorVersion">
            <summary>
            Major Version.
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.DatabaseVersion">
            <summary>
            Version.
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.Collation">
            <summary>
            The collation setting
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.Comment">
            <summary>
            A comment.
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.ComputedDefinition">
            <summary>
            The statement that defines the computed field
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.DefaultValue">
            <summary>
            The default value
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsIdentity">
            <summary>
            Identity Column
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IdentityIncrement">
            <summary>
            Identity Increment
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IdentitySeed">
            <summary>
            Identity Seed
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsComputed">
            <summary>
            Computed Column or Index
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsDeterministic">
            <summary>
            Column is Deterministic
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsRowGuidColumn">
            <summary>
            The Column is a Row Guid
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.ParameterID">
            <summary>
            
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.ConstraintDefinitionFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.ConstraintNameFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.ConstraintTypeFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.DRIIndex">
            <summary>
            The index is used to maintain a declarative referential constraint.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms143918(v=SQL.105).aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.DRIPrimaryKey">
            <summary>
            The index implements a SQL Server PRIMARY KEY constraint. A value is returned only.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms143918(v=SQL.105).aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.DRIUniqueKey">
            <summary>
            The index implements a UNIQUE constraint on a table not constrained by primary key. The index is a candidate key.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms143918(v=SQL.105).aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.DropExist">
            <summary>
            Optimizes index creation when an existing index is rebuilt.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms143918(v=SQL.105).aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsAutoStatistics">
            <summary>
            The StatisticsIndex property directs Index object property evaluation when the object is used to create a Microsoft SQL Server index.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms133479.aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsConstraint">
            <summary>
            
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsClustered">
            <summary>
            The index is clustered. SQL Server supports a single clustered index on any table.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms143918(v=SQL.105).aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsDescending">
            <summary>
            
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsFullTextKey">
            <summary>
            The IsFullTextKey property identifies the index used by Microsoft Search to support row identification.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms142504.aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IgnoreDuplicateKey">
            <summary>
            Controls error generation when an INSERT or UPDATE operation could cause a constraint violation and the index implements a PRIMARY KEY or UNIQUE constraint.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms143918(v=SQL.105).aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsHypothetical">
            <summary>
            Redirects index creation, mapping Index object manipulation to CREATE STATISTICS and DROP STATISTICS statements.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms143918(v=SQL.105).aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsStatistics">
            <summary>
            The StatisticsIndex property directs Index object property evaluation when the object is used to create a Microsoft SQL Server index.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms133479.aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsTableIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.NoRecompute">
            <summary>
            Creates index with statistics computation off.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms143918(v=SQL.105).aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.OriginalFillFactor">
            <summary>
            The FillFactor property exposes the percent of each page used to store index data when the index is created.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms138439.aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.PadIndex">
            <summary>
            Index nodes are padded using a fill factor.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms143918(v=SQL.105).aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.CascadeDelete">
            <summary>
            
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.CascadeUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsNotForReplication">
            <summary>
            
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.WithNoCheck">
            <summary>
            
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.Description">
            <summary>
            The Description
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.FileGroup">
            <summary>
            The FileGroup property identifies the file group used to store Microsoft SQL Server table or index data.
            <see cref="!:http://msdn.microsoft.com/en-us/library/ms140560.aspx"/>
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.IsTrigger">
             <summary>
            
             </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.ObjectID">
            <summary>
            
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.Sequence">
            <summary>
            
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.SystemType">
            <summary>
            The System Type (E.G., System.String)
            </summary>
        </member>
        <member name="F:SchemaExplorer.ExtendedPropertyNames.UserDefinedType">
            <summary>
            
            </summary>
        </member>
        <member name="T:SchemaExplorer.SchemaUtility">
            <summary>
            Summary description for SchemaUtility.
            </summary>
        </member>
        <member name="T:SchemaExplorer.TableDependancyComparer">
            <summary>
            Sorts TableSchema objects based on their dependencies.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableKeySchema.ForeignKeyTable">
            <summary>
            The foreign key table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableKeySchema.ForeignKeyMemberColumns">
            <summary>
            The foreign key table columns that make up this key.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableKeySchema.PrimaryKeyTable">
            <summary>
            The primary key table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableKeySchema.PrimaryKeyMemberColumns">
            <summary>
            The primary key table columns that make up this key.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableKeySchema.PrimaryKey">
            <summary>
            The primary key for the table that this key refers to.
            </summary>
        </member>
        <member name="T:SchemaExplorer.TableKeySchema">
            <summary>
            Provides information about a table key.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TableKeySchema.Refresh">
            <summary>
            Refresh this object.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TableKeySchema.FormatFullName(System.String,System.String,System.String)">
            <summary>
            Formats the full name.
            </summary>
            <param name="owner">The owner.</param>
            <param name="tableName">Name of the table.</param>
            <param name="keyName">Name of the key.</param>
            <returns></returns>
        </member>
        <member name="M:SchemaExplorer.TableKeySchema.Equals(System.Object)">
            <summary>
            Determines if another table key is the same as this table key.
            </summary>
            <param name="obj">The table key to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.TableKeySchema.GetHashCode">
            <summary>
            Returns a hashcode based on the database, table and name of the table key.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.TableKeySchema.ForeignKeyTable">
            <summary>
            The foreign key table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableKeySchema.ForeignKeyMemberColumns">
            <summary>
            The foreign key table columns that make up this key.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableKeySchema.PrimaryKeyTable">
            <summary>
            The primary key table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableKeySchema.PrimaryKeyMemberColumns">
            <summary>
            The primary key table columns that make up this key.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableKeySchema.PrimaryKey">
            <summary>
            The primary key for the table that this key refers to.
            </summary>
        </member>
        <member name="T:SchemaExplorer.TableKeySchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.TableKeySchema"/> elements.
            </summary>
            <remarks>
            <b>TableKeySchemaCollection</b> provides an <see cref="T:SchemaExplorer.SchemaObjectCollection`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TableKeySchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.TableKeySchemaCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.TableKeySchema})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableKeySchemaCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="M:SchemaExplorer.ITableSchema.GetTableData">
            <summary>
            Gets the data contained within the table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.ITableSchema.HasPrimaryKey">
            <summary>
            Provides information about the primary key of the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableSchema.PrimaryKey">
            <summary>
            Provides information about the primary key of the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableSchema.Keys">
            <summary>
            Provides information about the keys contained in the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableSchema.ForeignKeys">
            <summary>
            Provides information about the foreign keys (keys where the current table is the foreign table) contained in the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableSchema.PrimaryKeys">
            <summary>
            Provides information about the primary keys (keys where the current table is the primary table) contained in the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableSchema.Indexes">
            <summary>
            Provides information about the indexes contained in the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableSchema.Columns">
            <summary>
            Provides information about the table columns.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableSchema.NonPrimaryKeyColumns">
            <summary>
            Provides information about all non-primary key table columns.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableSchema.NonKeyColumns">
            <summary>
            Provides information about all non-key columns.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableSchema.NonForeignKeyColumns">
            <summary>
            Provides information about all columns who are not members of a foreign key.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ITableSchema.ForeignKeyColumns">
            <summary>
            Provides information about all columns who are members of a foreign key.
            </summary>
        </member>
        <member name="T:SchemaExplorer.TableSchema">
            <summary>
            Provides information about a database table.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TableSchema.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime)">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="dateCreated"></param>
        </member>
        <member name="M:SchemaExplorer.TableSchema.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime,SchemaExplorer.ExtendedProperty[])">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="dateCreated"></param>
            <param name="extendedProperties"></param>
        </member>
        <member name="M:SchemaExplorer.TableSchema.Refresh">
            <summary>
            Allows you to refresh the information for this table.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TableSchema.IsDependantOf(SchemaExplorer.ITableSchema)">
            <summary>
            Determines whether the current table is a dependant of the supplied table.
            </summary>
            <param name="table">The table to check against.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:SchemaExplorer.TableSchema.GetTableData">
            <summary>
            Gets the data contained within the table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.TableSchema.HasPrimaryKey">
            <summary>
            Provides information about the primary key of the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.PrimaryKey">
            <summary>
            Provides information about the primary key of the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.Columns">
            <summary>
            Provides information about the table columns.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.NonPrimaryKeyColumns">
            <summary>
            Provides information about all non-primary key table columns.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.NonKeyColumns">
            <summary>
            Provides information about all non-key columns.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.NonForeignKeyColumns">
            <summary>
            Provides information about all columns who are not members of a foreign key.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.ForeignKeyColumns">
            <summary>
            Provides information about all columns who are members of a foreign key.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.Keys">
            <summary>
            Provides information about the keys contained in the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.ForeignKeys">
            <summary>
            Provides information about the foreign keys (keys where the current table is the foreign table) contained in the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.PrimaryKeys">
            <summary>
            Provides information about the primary keys (keys where the current table is the primary table) contained in the table.
            </summary>
        </member>
        <member name="P:SchemaExplorer.TableSchema.Indexes">
            <summary>
            Provides information about the indexes contained in the table.
            </summary>
        </member>
        <member name="T:SchemaExplorer.TableSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.TableSchema"/> elements.
            </summary>
            <remarks>
            <b>TableSchemaCollection</b> provides an <see cref="T:SchemaExplorer.SchemaObjectWithOwnerCollection`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.TableSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableSchemaCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableSchemaCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.TableSchemaCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.TableSchema})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.TableSchemaCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="P:SchemaExplorer.IViewColumnSchema.View">
            <summary>
            The view that contains this column.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ViewColumnSchema">
            <summary>
            Provides information about a view column.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchema.#ctor(SchemaExplorer.ViewSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32)">
            <summary>
            Creates a new instance of the ViewColumnSchema object.
            </summary>
            <param name="view">The view that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchema.#ctor(SchemaExplorer.ViewSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean)">
            <summary>
            Creates a new instance of the ViewColumnSchema object.
            </summary>
            <param name="view">The view that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchema.#ctor(SchemaExplorer.ViewSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,SchemaExplorer.ExtendedProperty[])">
            <summary>
            Creates a new instance of the ViewColumnSchema object.
            </summary>
            <param name="view">The view that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="extendedProperties">The array of extended properties for this column.</param>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchema.#ctor(SchemaExplorer.ViewSchema,System.String,System.Data.DbType,System.String,System.Int32,System.Byte,System.Int32,System.Boolean,SchemaExplorer.ExtendedProperty[])">
            <summary>
            Creates a new instance of the ViewColumnSchema object.
            </summary>
            <param name="view">The view that the column belongs to.</param>
            <param name="name">The name of the column.</param>
            <param name="dataType">The columns data type.</param>
            <param name="nativeType">The columns native type.</param>
            <param name="size">The size of the column.</param>
            <param name="precision">The precision of the column.</param>
            <param name="scale">The scale of the column.</param>
            <param name="allowDBNull">Whether the column allows null values.</param>
            <param name="extendedProperties">The array of extended properties for this column.</param>
        </member>
        <member name="P:SchemaExplorer.ViewColumnSchema.View">
            <summary>
            The view that contains this column.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ViewColumnSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements.
            </summary>
            <remarks>
            <b>ViewColumnSchemaCollection</b> provides an <see cref="T:SchemaExplorer.DataObjectBaseCollection`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ViewColumnSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.ViewColumnSchemaCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.ViewColumnSchema})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewColumnSchemaCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
        <member name="M:SchemaExplorer.IViewSchema.GetViewData">
            <summary>
            Gets the data contained within the table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.IViewSchema.Columns">
            <summary>
            Provides information about the view columns.
            </summary>
        </member>
        <member name="P:SchemaExplorer.IViewSchema.ViewText">
            <summary>
            Gets the view text for this view.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ViewSchema">
            <summary>
            Provides information about a database table.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ViewSchema.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime)">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="dateCreated"></param>
        </member>
        <member name="M:SchemaExplorer.ViewSchema.#ctor(SchemaExplorer.DatabaseSchema,System.String,System.String,System.DateTime,SchemaExplorer.ExtendedProperty[])">
            <summary>
            
            </summary>
            <param name="database"></param>
            <param name="name"></param>
            <param name="owner"></param>
            <param name="dateCreated"></param>
            <param name="extendedProperties"></param>
        </member>
        <member name="M:SchemaExplorer.ViewSchema.Refresh">
            <summary>
            Allows you to refresh the information for this table.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ViewSchema.GetViewData">
            <summary>
            Gets the data contained within the table.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SchemaExplorer.ViewSchema.Columns">
            <summary>
            Provides information about the view columns.
            </summary>
        </member>
        <member name="P:SchemaExplorer.ViewSchema.ViewText">
            <summary>
            Gets the view text for this view.
            </summary>
        </member>
        <member name="T:SchemaExplorer.ViewSchemaCollection">
            <summary>
            Implements a strongly typed collection of <see cref="T:SchemaExplorer.ViewSchema"/> elements.
            </summary>
            <remarks>
            <b>ViewSchemaCollection</b> provides an <see cref="T:SchemaExplorer.SchemaObjectWithOwnerCollection`1"/>
            that is strongly typed for <see cref="T:SchemaExplorer.ViewSchema"/> elements.
            </remarks>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> class.
            </summary>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> class.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
        </member>
        <member name="M:SchemaExplorer.ViewSchemaCollection.#ctor(System.Collections.Generic.IEnumerable{SchemaExplorer.ViewSchema})">
            <summary>
            Initializes a new instance of the <see cref="T:SchemaExplorer.ViewSchemaCollection"/> class.
            </summary>
            <param name="collection">The collection from which the elements are copied.</param>
        </member>
    </members>
</doc>
