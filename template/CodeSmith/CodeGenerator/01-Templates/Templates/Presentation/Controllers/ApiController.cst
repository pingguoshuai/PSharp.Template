<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>
<%@ Register Name="TreeApiController" Template="TreeApiController.cst" MergeProperties="False" ExcludeProperties="" %>

<%@ Assembly Src="..\..\..\Common\Model.cs" %>
<%@ Assembly Src="..\..\..\Common\Extensions.cs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="SchemaMapper" %>

<%@ Property Name="Namespace" Type="System.String" %>
<%@ Property Name="Entity" Type="SchemaMapper.Entity"  %>
<%@ Property Name="Schema" Type="System.String"  %>
<%-- Safe类名 --%>
<% string SafeClassName = Entity.ClassName.ToSafeName(); %>
<%-- 描述 --%>
<% string Description = Entity.Description; %>
<%-- 如果是树型实体，则调用子模板 --%>
<%
if( Entity.IsTreeEntity() ){
    CodeTemplate template = new TreeApiController();
    template.SetProperty("Namespace",Namespace);
    template.SetProperty("Entity",Entity);
    template.SetProperty("Schema",Schema);
    template.Render(this.Response);
    return;
}
%>
using Util.Webs.Controllers;
using <%= string.Format("{0}.{1}.Services.Dtos",Namespace,Entity.TableSchema) %>;
using <%= string.Format("{0}.{1}.Services.Queries",Namespace,Entity.TableSchema) %>;
using <%= string.Format("{0}.{1}.Services.Abstractions",Namespace,Entity.TableSchema) %>;
using <%= string.Format("{0}.{1}.Services.Dtos.Requests",Namespace,Entity.TableSchema) %>;
using Microsoft.AspNetCore.Mvc;

namespace <%= Namespace %>.<%= Schema %>.Controllers {
    /// <summary>
    /// <%= Description %>控制器
    /// </summary>
    [ApiExplorerSettings(GroupName = "<%=Entity.TableSchema%>")]
    public class <%= SafeClassName %>Controller : CrudControllerBase<<%= SafeClassName %>Dto, Create<%= SafeClassName %>Request, Update<%= SafeClassName %>Request, <%= SafeClassName %>Query> {
        /// <summary>
        /// 初始化<%= Description %>控制器
        /// </summary>
        /// <param name="service"><%= Description %>服务</param>
        public <%= SafeClassName %>Controller( I<%= SafeClassName %>Service service ) : base( service ) {
            <%= SafeClassName %>Service = service;
        }
        
        /// <summary>
        /// <%= Description %>服务
        /// </summary>
        public I<%= SafeClassName %>Service <%= SafeClassName %>Service { get; }
    }
}