<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>
<%@ Register Name="ITreeService" Template="Trees/ITreeService.cst" MergeProperties="False" ExcludeProperties="" %>

<%@ Assembly Src="..\..\Common\Model.cs" %>
<%@ Assembly Src="..\..\Common\Extensions.cs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="SchemaMapper" %>

<%@ Property Name="Entity" Type="SchemaMapper.Entity"  %>
<%@ Property Name="Namespace" Type="System.String" %>
<%-- Safe类名 --%>
<% string SafeClassName = Entity.ClassName.ToSafeName(); %>
<%-- 描述 --%>
<% string Description = Entity.Description; %>
<%-- 如果是树型实体，则调用子模板 --%>
<%
if( Entity.IsTreeEntity() ){
    CodeTemplate template = new ITreeService();
    template.SetProperty("Namespace",Namespace);
    template.SetProperty("Entity",Entity);
    template.Render(this.Response);
    return;
}
%>
using Util.Applications;
using <%= string.Format("{0}.{1}.Services.Dtos",Namespace,Entity.TableSchema) %>;
using <%= string.Format("{0}.{1}.Services.Dtos.Requests",Namespace,Entity.TableSchema) %>;
using <%= string.Format("{0}.{1}.Services.Queries",Namespace,Entity.TableSchema) %>;

namespace <%= string.Format("{0}.{1}.Services.Abstractions",Namespace,Entity.TableSchema) %> {
    /// <summary>
    /// <%= Description %>服务
    /// </summary>
    public interface I<%= SafeClassName %>Service : ICrudService<<%= SafeClassName %>Dto, Update<%= SafeClassName %>Request, Create<%= SafeClassName %>Request, Update<%= SafeClassName %>Request, <%= SafeClassName %>Query> {
    }
}