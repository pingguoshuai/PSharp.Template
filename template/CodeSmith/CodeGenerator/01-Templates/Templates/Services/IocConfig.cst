<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>

<%@ Assembly Src="..\..\Common\Model.cs" %>
<%@ Assembly Src="..\..\Common\Extensions.cs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="SchemaMapper" %>

<%@ Property Name="EntityContext" Type="SchemaMapper.EntityContext"  %>
<%@ Property Name="Namespace" Type="System.String" %>
<%@ Property Name="DbName" Type="System.String" %>
using Autofac;
using Util.Dependency;
using <%= Namespace %>.Data;

namespace <%= Namespace %>.Services.Configs {
    /// <summary>
    /// 依赖注入配置
    /// </summary>
    public class IocConfig : ConfigBase {
        /// <summary>
        /// 加载配置
        /// </summary>
        protected override void Load( ContainerBuilder builder ) {
            LoadInfrastructure( builder );
            LoadRepositories( builder );
            LoadDomainServices( builder );
            LoadApplicationServices( builder );
        }

        /// <summary>
        /// 加载基础设施
        /// </summary>
        protected virtual void LoadInfrastructure( ContainerBuilder builder ) {
            builder.AddScoped<I<%= DbName %>UnitOfWork, <%= DbName %>UnitOfWork>();
        }

        /// <summary>
        /// 加载仓储
        /// </summary>
        protected virtual void LoadRepositories( ContainerBuilder builder ) {
        <% foreach(Entity entity in EntityContext.Entities) {%>
            builder.AddScoped<I<%= entity.ClassName.ToSafeName() %>Repository,<%= entity.ClassName.ToSafeName() %>Repository>();
        <%} %>
        }
        
        /// <summary>
        /// 加载领域服务
        /// </summary>
        protected virtual void LoadDomainServices( ContainerBuilder builder ) {
        }
        
        /// <summary>
        /// 加载应用服务
        /// </summary>
        protected virtual void LoadApplicationServices( ContainerBuilder builder ) {
        <% foreach(Entity entity in EntityContext.Entities) {%>
            builder.AddScoped<I<%= entity.ClassName.ToSafeName() %>Service,<%= entity.ClassName.ToSafeName() %>Service>().PropertiesAutowired();
        <%} %>
        }
    }
}