<%@ Template Language="C#" TargetLanguage="C#" Debug="True" Encoding="UTF-8" %>

<%@ Assembly Src="..\..\..\Common\Model.cs" %>
<%@ Assembly Src="..\..\..\Common\Extensions.cs" %>

<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="System.Text.RegularExpressions" %>
<%@ Import Namespace="SchemaMapper" %>

<%@ Property Name="Entity" Type="SchemaMapper.Entity"  %>
<%@ Property Name="Namespace" Type="System.String" %>
<%-- Safe类名 --%>
<% string SafeClassName = Entity.ClassName.ToSafeName(); %>
<%-- 描述 --%>
<% string Description = Entity.Description; %>
using Util;
using <%= Entity.GetNamespace(Namespace,"Domain","Models") %>;
using Util.Maps;

namespace <%= Namespace %>.Data.Pos.<%= Entity.TableSchema %>.Extensions {
    /// <summary>
    /// <%= Description %>持久化对象扩展
    /// </summary>
    public static partial class Extension {
        /// <summary>
        /// 转换为<%= Description %>实体
        /// </summary>
        /// <param name="po"><%= Description %>持久化对象</param>
        public static <%= SafeClassName %> ToEntity( this <%= SafeClassName %>Po po ) {
            if ( po == null )
                return null;
            return po.MapTo( new <%= SafeClassName %>( po.Id ) );
        }
        
        /// <summary>
        /// 转换为<%= Description %>实体
        /// </summary>
        /// <param name="po"><%= Description %>持久化对象</param>
        private static <%= SafeClassName %> ToEntity2( this <%= SafeClassName %>Po po ) {
            if( po == null )
                return null;
            return new <%= SafeClassName %>( po.Id ) {
                <% foreach(Property p in Entity.Properties) { %>
                <% if( p.IsPrimaryKey.SafeValue() ) continue; %>
                <%= p.PropertyName.ToSafeName() %> = po.<%= p.PropertyName.ToSafeName() %>,
                <%}%>
            };
        }
        
        /// <summary>
        /// 转换为<%= Description %>持久化对象
        /// </summary>
        /// <param name="entity"><%= Description %>实体</param>
        public static <%= SafeClassName %>Po ToPo(this <%= SafeClassName %> entity) {
            if( entity == null )
                return null;
            return entity.MapTo<<%= SafeClassName %>Po>();
        }

        /// <summary>
        /// 转换为<%= Description %>持久化对象
        /// </summary>
        /// <param name="entity"><%= Description %>实体</param>
        private static <%= SafeClassName %>Po ToPo2( this <%= SafeClassName %> entity ) {
            if( entity == null )
                return null;
            return new <%= SafeClassName %>Po {
                <% foreach(Property p in Entity.Properties) { %>
                <% if( p.IsPrimaryKey.SafeValue() ) {%>
                Id = entity.Id,
                <%continue;}%>
                <%= p.PropertyName.ToSafeName() %> = entity.<%= p.PropertyName.ToSafeName() %>,
                <%}%>
            };
        }
    }
}
